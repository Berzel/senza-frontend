import Head from "next/head";
import styled from "styled-components";
import tw from "twin.macro";
import Header from "../../components/Header/Header";
import NavBar from "../../components/NavBar/NavBar";
import Container from "../../components/Container/Container";
import { useRouter } from "next/router";
import { useState } from "react";
import CreateJobStyles from "../../components/CreateJob/CreateJob.styled";
import useUser from "../../lib/useUser";
import AuthModal from "../../components/AuthModal/AuthModal";
import axios from "axios";

const Main = styled.main`
    & > *+* {
        ${tw`mt-7 block`}
    }
`;

const NewJobPage = ({countries}) => {
    const router = useRouter();
    const { user } = useUser();
    const [showAuthModal, setShowAuthModal] = useState(false);
    const [job, setJob] = useState(typeof window === 'object' ? JSON.parse(localStorage.getItem('job')) : {});
    const [company, setCompany] = useState(typeof window === 'object' ? JSON.parse(localStorage.getItem('company')) : {});
    const [skills, setSkills] = useState(['', '', '']);
    const [responsibilities, setResponsibilities] = useState(['', '', '']);

    const updateCompany = newCompanyDetails => {
        setCompany(newCompanyDetails);
        localStorage.setItem('company', JSON.stringify(newCompanyDetails));
    }

    const updateJob = newJobDetails => {
        setJob(newJobDetails)
        localStorage.setItem('job', JSON.stringify(newJobDetails));
    }

    const addSkill = e => {
        e.preventDefault();
        if (skills.length > 30) return;
        const newSkills = [...skills, ''];
        setSkills(newSkills);
        updateJob({...job, qualifications: newSkills})
    }

    const updateSkill = (key, value) => {
        let newSkills = [...skills]
        newSkills[key] = value
        setSkills(newSkills)
        updateJob({...job, qualifications: newSkills})
    }

    const removeSkill = key => {
        if (skills.length <= 3) return;
        let newSkills = [...skills]
        newSkills = newSkills.filter((skill, index) => key !== index)
        setSkills(newSkills)
        updateJob({...job, qualifications: newSkills})
    }

    const addResponsibitity = e => {
        e.preventDefault()
        if (responsibilities.length > 30) return;
        const newResponsibilities = [...responsibilities, ''];
        setResponsibilities(newResponsibilities)
        updateJob({...job, responsibilities: newResponsibilities})
    }

    const updateResponsibility = (key, value) => {
        let newResponsibilities = [...responsibilities]
        newResponsibilities[key] = value
        setResponsibilities(newResponsibilities)
        updateJob({...job, responsibilities: newResponsibilities})
    }

    const removeResponsibility = key => {
        if (responsibilities.length <= 3) return;
        let newResponsibilities = [...responsibilities]
        newResponsibilities = newResponsibilities.filter((res, index) => key !== index)
        setResponsibilities(newResponsibilities)
        updateJob({...job, responsibilities: newResponsibilities})
    }
    
    const postJob = event => {
        event.preventDefault()
        
        if (!user && !showAuthModal) {
            return setShowAuthModal(true)
        }

        console.log(company, job);
    }
    
    return (
        <>
            <Head>
                <title>Senza - New Job</title>
                <meta name="description" content="Generated by create next app" />
            </Head>
    
            <Header>
                <div className="container">
                    <NavBar />
                </div>
            </Header>
            <Container>
                <Main>
                    <CreateJobStyles>
                        <div className="top">
                            <div>
                                <button className="back" onClick={e => router.back()}>
                                    <span>
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                                            <path d="M3.828 9l6.071-6.071-1.414-1.414L0 10l.707.707 7.778 7.778 1.414-1.414L3.828 11H20V9H3.828z"/>
                                        </svg>
                                    </span>
                                    <span>
                                        Back
                                    </span>
                                </button>
                            </div>
                            <h1 className="title">
                                New Job Listing
                            </h1>
                            <p>
                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Qui quo ad nostrum culpa, 
                                aperiam numquam animi enim, dolores, neque veritatis eius deleniti voluptas alias reiciendis ab dignissimos unde velit rem.
                            </p>
                        </div>
                        <div className="form-container">
                            <div className="left">
                                <div className="sidebar">
                                    Left
                                </div>
                            </div>
                            <div className="right">
                                <form action="/jobs" id="post_job_form" method="POST" encType="multipart/form-data" className="form" onSubmit={postJob}>
                                    <div className="section">
                                        <h2 className="title">
                                            Company Details
                                        </h2>
                                        <div className="row">
                                            <div className="group">
                                                <label htmlFor="company_name" className="label">
                                                    Company name
                                                </label>
                                                <input 
                                                    className="input" 
                                                    type="text" 
                                                    id="company_name" 
                                                    name="company_name" 
                                                    value={company?.name ?? ''} 
                                                    onChange={e => updateCompany({...company, name: e.target.value})} 
                                                    placeholder="Company name" required/>
                                            </div>
                                            <div className="group">
                                                <label htmlFor="company_country" className="label">
                                                    Company country
                                                </label>
                                                <select 
                                                    className="input" 
                                                    id="company_country" 
                                                    value={company?.country_id ?? '1'} 
                                                    onChange={e => updateCompany({...company, country_id: e.target.value})} 
                                                    name="company_country" required>
                                                        {
                                                            countries && countries.map(country => (
                                                                <option key={country.id} value={country.id}>{country.name}</option>
                                                            ))
                                                        }
                                                </select>
                                            </div>
                                        </div>

                                        <div className="group">
                                            <label htmlFor="company_logo" className="label">
                                                Company logo
                                            </label>
                                            <input className="input" type="file" id="company_logo" name="company_logo" placeholder="Upload logo"/>
                                        </div>
                                        <div className="group">
                                            <label htmlFor="company_description" className="label">
                                                Company description
                                            </label>
                                            <textarea 
                                                rows="5" 
                                                className="input" 
                                                name="company_about" 
                                                id="company_description" 
                                                value={company?.about ?? ''} 
                                                onChange={e => updateCompany({...company, about: e.target.value})} 
                                                placeholder="Briefly describe your company" required>
                                            </textarea>
                                        </div>
                                        <div className="row">
                                            <div className="group">
                                                <label htmlFor="company_website" className="label">
                                                    Company website
                                                </label>
                                                <input 
                                                    type="url" 
                                                    className="input"
                                                    id="company_website" 
                                                    name="company_website" 
                                                    value={company?.website ?? ''}
                                                    onChange={e => updateCompany({...company, website: e.target.value})}
                                                    placeholder="www.company.com"/>
                                            </div>
                                            <div className="group">
                                                <label htmlFor="company_email" className="label">
                                                    Contact email
                                                </label>
                                                <input 
                                                    className="input" 
                                                    type="email" 
                                                    id="company_email" 
                                                    name="company_email"
                                                    value={company?.email ?? ''}
                                                    onChange={e => updateCompany({...company, email: e.target.value})} 
                                                    placeholder="someone@company.com"/>
                                            </div>
                                        </div>
                                        <div className="row">
                                            <div className="group">
                                                <label htmlFor="company_twitter" className="label">
                                                    Twitter handle
                                                </label>
                                                <input 
                                                    className="input" 
                                                    type="text" 
                                                    id="company_twitter" 
                                                    name="company_twitter"
                                                    value={company?.twitter ?? ''}
                                                    onChange={e => updateCompany({...company, twitter: e.target.value})} 
                                                    placeholder="@CompanyName"/>
                                            </div>
                                            <div className="group">
                                                <label htmlFor="company_facebook" className="label">
                                                    Facebook
                                                </label>
                                                <input 
                                                    className="input" 
                                                    type="text" 
                                                    id="company_facebook" 
                                                    name="company_facebook"
                                                    value={company?.facebook ?? ''}
                                                    onChange={e => updateCompany({...company, facebook: e.target.value})} 
                                                    placeholder="Facebook page"/>
                                            </div>
                                        </div>
                                    </div>
                                    <div className="section">
                                        <h2 className="title">
                                            Job Details
                                        </h2>
                                        <div className="row">
                                            <div className="group">
                                                <label htmlFor="job_title" className="label">
                                                    Job title / role
                                                </label>
                                                <input 
                                                    className="input" 
                                                    type="text" 
                                                    id="job_title" 
                                                    name="job_title" 
                                                    value={job?.title ?? ''} 
                                                    onChange={e => updateJob({...job, title: e.target.value})} 
                                                    placeholder="Web Developer, etc" required/>
                                            </div>
                                            <div className="group">
                                                <label htmlFor="job_sector" className="label">
                                                    Industry sector
                                                </label>
                                                <select 
                                                    className="input" 
                                                    name="job_sector" 
                                                    value={job?.sector ?? ''}
                                                    onChange={e => updateJob({...job, sector: e.target.value})}
                                                    id="job_sector" required>
                                                        <option value="">Pick a sector</option>
                                                        <option value="acccounting">Accounting</option>
                                                        <option value="education">Education</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div className="row">
                                            <div className="group">
                                                <label htmlFor="job_level" className="label">
                                                    Job level
                                                </label>
                                                <select 
                                                    className="input" 
                                                    name="job_level"
                                                    value={job?.level ?? ''}
                                                    onChange={e => updateJob({...job, level: e.target.value})}
                                                    id="job_level" required>
                                                        <option value="">Pick a level</option>
                                                        <option value="intern">Internship</option>
                                                        <option value="graduate-trainee">Graduate Trainee</option>
                                                        <option value="entry-level">Entry-Level</option>
                                                        <option value="intermediate">Intermediate</option>
                                                        <option value="mid-level">Mid-Level</option>
                                                        <option value="senior">Senior</option>
                                                </select>
                                            </div>
                                            <div className="group">
                                                <label htmlFor="job_type" className="label">
                                                    Contract type
                                                </label>
                                                <select 
                                                    className="input" 
                                                    name="contract_type"
                                                    value={job?.contract_type ?? ''}
                                                    onChange={e => updateJob({...job, contract_type: e.target.value})} 
                                                    id="contract_type" required>
                                                        <option value="">Pick a contract type</option>
                                                        <option value="fixed-term">Fixed Term</option>
                                                        <option value="part-time">Part Time</option>
                                                        <option value="full-time">Full Time</option>
                                                        <option value="temporary">Temporary</option>
                                                        <option value="zero-hours">Zero Hours</option>
                                                        <option value="apprenticeship">Apprenticeship</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div className="group">
                                            <label htmlFor="job_description" className="label">
                                                Job description
                                            </label>
                                            <textarea 
                                                rows="8" 
                                                className="input" 
                                                name="job_description" 
                                                id="job_description"
                                                value={job?.description ?? ''}
                                                onChange={e => updateJob({...job, description: e.target.value})} 
                                                placeholder="Job description goes here" required/>
                                        </div>

                                        <div>
                                            <h3 className="small-title">Salary details</h3>
                                            <div className="check-group">
                                                <input 
                                                    type="checkbox" 
                                                    name="is_salary_negotiable"
                                                    checked={!!job?.salary?.negotiable} 
                                                    onChange={e => updateJob({...job, salary: {...job?.salary, negotiable: e.target.checked}})}
                                                    id="is_salary_negotiable" required/>
                                                <label htmlFor="is_salary_negotiable" className="check-label">Salary is negotiable?</label>
                                            </div>
                                            <div className="row">
                                                <div className="group">
                                                    <label htmlFor="salary_min" className="label">
                                                        Min
                                                    </label>
                                                    <input 
                                                        className="input" 
                                                        type="number" 
                                                        id="salary_min" 
                                                        name="salary_min" 
                                                        value={job?.salary?.min ?? ''}
                                                        onChange={e => updateJob({...job, salary: {...job?.salary, min: e.target.value}})}
                                                        placeholder="250" required/>
                                                </div>
                                                <div className="group">
                                                    <label htmlFor="salary_max" className="label">
                                                        Max
                                                    </label>
                                                    <input 
                                                        className="input" 
                                                        type="number"
                                                        id="salary_max" 
                                                        name="salary_max" 
                                                        value={job?.salary?.max ?? ''}
                                                        onChange={e => updateJob({...job, salary: {...job?.salary, max: e.target.value}})}
                                                        placeholder="10000" required/>
                                                </div>
                                                <div className="group">
                                                    <label htmlFor="salary_currency" className="label">
                                                        Currency
                                                    </label>
                                                    <select 
                                                        className="input" 
                                                        name="salary_currency" 
                                                        value={job?.salary?.currency ?? ''}
                                                        onChange={e => updateJob({...job, salary: {...job?.salary, currency: e.target.value}})}
                                                        id="salary_currency" required>
                                                            <option value="">Currency</option>
                                                            <option value="usd">USD</option>
                                                            <option value="zwl">ZWL</option>
                                                            <option value="eur">EUR</option>
                                                            <option value="gbp">GBP</option>
                                                    </select>
                                                </div>
                                                <div className="group">
                                                    <label htmlFor="salary_interval" className="label">
                                                        Interval
                                                    </label>
                                                    <select 
                                                        className="input" 
                                                        name="salary_interval"
                                                        value={job?.salary?.interval ?? ''}
                                                        onChange={e => updateJob({...job, salary: {...job?.salary, interval: e.target.value}})} 
                                                        id="salary_interval" required>
                                                            <option value="">Set interval</option>
                                                            <option value="hourly">Hourly</option>
                                                            <option value="daily">Daily</option>
                                                            <option value="weekly">Weekly</option>
                                                            <option value="bi-weekly">Bi-Weekly</option>
                                                            <option value="monthly">Monthly</option>
                                                            <option value="yearly">Yearly</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>

                                        <div>
                                            <h3 className="small-title">Residential preference</h3>
                                            <div className="check-group">
                                                <input 
                                                    type="checkbox" 
                                                    name="is_remote"
                                                    checked={!!job?.is_remote} 
                                                    onChange={e => updateJob({...job, is_remote: e.target.checked})} 
                                                    id="is_remote" />
                                                <label htmlFor="is_remote" className="check-label">This role allows working from home?</label>
                                            </div>
                                            <div className="row">
                                                <div className="group">
                                                    <label htmlFor="job_country" className="label">
                                                        Country
                                                    </label>
                                                    <select 
                                                        className="input" 
                                                        name="job_country" 
                                                        value={job?.country_id ?? '1'}
                                                        onChange={e => updateJob({...job, country_id: e.target.value})}
                                                        id="job_country">
                                                            {
                                                                countries && countries.map(country => (
                                                                    <option key={country.id} value={country.id}>{country.name}</option>
                                                                ))
                                                            }
                                                    </select>
                                                </div>
                                                <div className="group">
                                                    <label htmlFor="job_city" className="label">
                                                        City / Town
                                                    </label>
                                                    <input 
                                                        className="input" 
                                                        type="text" 
                                                        id="job_city" 
                                                        name="job_city" 
                                                        value={job?.city ?? ''}
                                                        onChange={e => updateJob({...job, city: e.target.value})}
                                                        placeholder="Enter town or city name"/>
                                                </div>
                                            </div>
                                        </div>
                                        <div className="sub-section">
                                            <h3 className="small-title">Responsibilities</h3>
                                            {
                                                responsibilities && responsibilities.map((res, key) => (
                                                    <div className="group list" key={key}>
                                                        <input 
                                                            className="input" 
                                                            value={res} 
                                                            onChange={e => updateResponsibility(key, e.target.value)} 
                                                            type="text" 
                                                            id={`job-responsibility-${key}`} 
                                                            name={`responsibilities[${key}]`} 
                                                            placeholder={`Responsibility #${key+1}`} required/>
                                                        <a className="remove-btn" onClick={() => removeResponsibility(key)}>x</a>
                                                    </div>
                                                ))
                                            }
                                            <div className="more-btn">
                                                <a onClick={addResponsibitity}>
                                                    +
                                                </a>
                                            </div>
                                        </div>
                                        <div className="sub-section">
                                            <h3 className="small-title">Skills &amp; Qualifications</h3>
                                            {
                                                skills && skills.map((skill, key) =>(
                                                    <div className="group list" key={key}>
                                                        <input 
                                                            className="input" 
                                                            value={skill} 
                                                            onChange={e => updateSkill(key, e.target.value)} 
                                                            type="text" 
                                                            id={`job-skill-${key}`} 
                                                            name={`skills[${key}]`} 
                                                            placeholder={`Qualification #${key+1}`} required/>
                                                        <a className="remove-btn" onClick={() => removeSkill(key)}>x</a>
                                                    </div>
                                                ))
                                            }
                                            <div className="more-btn">
                                                <a onClick={addSkill}>
                                                    +
                                                </a>
                                            </div>
                                        </div>
                                        <div className="sub-section">
                                            <h3 className="small-title">How to apply</h3>
                                            <div className="group">
                                                <label htmlFor="application_instruction" className="label">
                                                    Application instructions
                                                </label>
                                                <textarea 
                                                    rows="5" 
                                                    className="input" 
                                                    name="application_instruction" 
                                                    id="application_instruction"
                                                    value={job?.application_instructions ?? ''}
                                                    onChange={e => updateJob({...job, application_instructions: e.target.value})} 
                                                    placeholder="How should candidates apply?" required/>
                                            </div>
                                            <div className="row">
                                            <div className="group">
                                                <label htmlFor="application_email" className="label">
                                                    Application email
                                                </label>
                                                <input 
                                                    className="input" 
                                                    type="email"
                                                    id="application_email" 
                                                    name="application_email"
                                                    value={job?.application_email ?? ''}
                                                    onChange={e => updateJob({...job, application_email: e.target.value})} 
                                                    placeholder="Application email"/>
                                            </div>
                                            <div className="group">
                                                <label htmlFor="application_link" className="label">
                                                    Application link
                                                </label>
                                                <input 
                                                    className="input" 
                                                    type="url"
                                                    id="application_link" 
                                                    name="application_link"
                                                    value={job?.application_link}
                                                    onChange={e => updateJob({...job, application_link: e.target.value})} 
                                                    placeholder="Application link"/>
                                            </div>
                                            </div>
                                        </div>
                                        <div className="group">
                                            <input type="submit" className="input submit" name="action" value="Post your job" />
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                        { showAuthModal && (<AuthModal close={() => setShowAuthModal(false)} />) }
                    </CreateJobStyles>
                </Main>
            </Container>
        </>
    )
}

export default NewJobPage

export async function getStaticProps(context) {
    const countries = await axios.get(`${process.env.NEXT_PUBLIC_CORE_SERVICE_ENDPOINT}/countries/all`).then(r => r.data)

    return {
        props: {
            countries
        },
    }
}